hugo <- (Ax * By - Ay * Bx + 0.000001)/abs(Ax * By - Ay * Bx + 0.000001)
cos <- round((Ax * Bx + Ay * By) / ((Ax^2 + Ay^2)*(Bx^2 + By^2))^0.5,14)
return(acos(cos)*hugo)
}
angle <- c(NA,NA, angle_cal(df_day$x, df_day$y, dim(df_day)[1]))
mle_wrpcauchy <- wrpcauchy.ml(na.omit(angle[df_day$pause==0]), 0, 0, acc=1e-015)
mu <- as.numeric(mle_wrpcauchy[1])
rho <- as.numeric(mle_wrpcauchy[2])
df_temp <- data.frame(
df_day[1,1:4], traveled_dis, mean_moving_speed,
D, a, mu, rho
)
df_sum <- rbind(df_sum, df_temp)
}
}
r = lmer(rho ~ day + sex + (1|colony/id), data=df_sum)
Anova(r)
ggplot(df_sum, aes(x=day, y=rho, col=sex))+
geom_point(position = position_dodge(width = 0.1))+
stat_summary(geom="errorbar", position = position_dodge(width = 0.1),
width=.1)+
scale_color_viridis(discrete = T, end=.5)
library(lme4)
df_sum
angle <- c(NA,NA, angle_cal(df_day$x, df_day$y, dim(df_day)[1]))
mle_wrpcauchy <- wrpcauchy.ml(na.omit(angle[df_day$pause==0]), 0, 0, acc=1e-015)
na.omit(angle[df_day$pause==0])
na.omit(angle[df_day$pause==0]
angle
if (length(na.omit(angle[df_day$pause==0])) > 0){
mle_wrpcauchy <- wrpcauchy.ml(na.omit(angle[df_day$pause==0]), 0, 0, acc=1e-015)
mu <- as.numeric(mle_wrpcauchy[1])
rho <- as.numeric(mle_wrpcauchy[2])
} else{
mu <- NA
rho <- NA
}
ids = unique(df_all$id)
df_sum <- NULL
for(i in 1:length(ids)){
df <- subset(df_all, id==ids[i])
for(i_day in 0:3){
df_day <- subset(df, day==i_day)
traveled_dis <- sum(df_day$step_length)
mean_moving_speed <- mean(df_day$step_length[df_day$pause == 0], na.rm=T)
computeMSD <- function(sx,sy,until=4)
{
msd.t <- rep(0,until)
for (dt in 1:until)
{
displacement.x <- as.vector(na.omit(sx[(1+dt):length(sx)]) - sx[1:(length(sx)-dt)])
displacement.y <- as.vector(na.omit(sy[(1+dt):length(sy)]) - sy[1:(length(sy)-dt)])
sqrdispl <- (displacement.x^2 + displacement.y^2)
msd.t[dt] <- mean(sqrdispl)
}
return(msd.t)
}
msd <- computeMSD(df_day$x, df_day$y, 5000)
tau <- 1:5000/5
r <- lm(log10(msd)~log10(tau))
D <- 10^r$coef[1]
a <- r$coef[2]
ggplot(data.frame(msd,tau), aes(x=tau, y=msd))+
geom_point()+
coord_fixed()+
scale_x_log10()+
scale_y_log10()
#ggsave(paste0("msd_",ids[i],"_",i_day,".pdf"))
angle_cal <- function(X, Y, Length){
Ax <- (X[3:Length-1] - X[3:Length-2])
Bx <- (X[3:Length] - X[3:Length-1])
Ay <- (Y[3:Length-1] - Y[3:Length-2])
By <- (Y[3:Length] - Y[3:Length-1])
hugo <- (Ax * By - Ay * Bx + 0.000001)/abs(Ax * By - Ay * Bx + 0.000001)
cos <- round((Ax * Bx + Ay * By) / ((Ax^2 + Ay^2)*(Bx^2 + By^2))^0.5,14)
return(acos(cos)*hugo)
}
angle <- c(NA,NA, angle_cal(df_day$x, df_day$y, dim(df_day)[1]))
if (length(na.omit(angle[df_day$pause==0])) > 0){
mle_wrpcauchy <- wrpcauchy.ml(na.omit(angle[df_day$pause==0]), 0, 0, acc=1e-015)
mu <- as.numeric(mle_wrpcauchy[1])
rho <- as.numeric(mle_wrpcauchy[2])
} else{
mu <- NA
rho <- NA
}
df_temp <- data.frame(
df_day[1,1:4], traveled_dis, mean_moving_speed,
D, a, mu, rho
)
df_sum <- rbind(df_sum, df_temp)
}
}
r = lmer(rho ~ day + sex + (1|colony/id), data=df_sum)
Anova(r)
ggplot(df_sum, aes(x=day, y=rho, col=sex))+
geom_point(position = position_dodge(width = 0.1))+
stat_summary(geom="errorbar", position = position_dodge(width = 0.1),
width=.1)+
scale_color_viridis(discrete = T, end=.5)
ids = unique(df_all$id)
df_sum <- NULL
for(i in 1:length(ids)){
df <- subset(df_all, id==ids[i])
for(i_day in 0:3){
df_day <- subset(df, day==i_day)
traveled_dis <- sum(df_day$step_length)
mean_moving_speed <- mean(df_day$step_length[df_day$pause == 0], na.rm=T)
pause_duration <- sum(df_day$pause)
computeMSD <- function(sx,sy,until=4)
{
msd.t <- rep(0,until)
for (dt in 1:until)
{
displacement.x <- as.vector(na.omit(sx[(1+dt):length(sx)]) - sx[1:(length(sx)-dt)])
displacement.y <- as.vector(na.omit(sy[(1+dt):length(sy)]) - sy[1:(length(sy)-dt)])
sqrdispl <- (displacement.x^2 + displacement.y^2)
msd.t[dt] <- mean(sqrdispl)
}
return(msd.t)
}
msd <- computeMSD(df_day$x, df_day$y, 5000)
tau <- 1:5000/5
r <- lm(log10(msd)~log10(tau))
D <- 10^r$coef[1]
a <- r$coef[2]
ggplot(data.frame(msd,tau), aes(x=tau, y=msd))+
geom_point()+
coord_fixed()+
scale_x_log10()+
scale_y_log10()
#ggsave(paste0("msd_",ids[i],"_",i_day,".pdf"))
angle_cal <- function(X, Y, Length){
Ax <- (X[3:Length-1] - X[3:Length-2])
Bx <- (X[3:Length] - X[3:Length-1])
Ay <- (Y[3:Length-1] - Y[3:Length-2])
By <- (Y[3:Length] - Y[3:Length-1])
hugo <- (Ax * By - Ay * Bx + 0.000001)/abs(Ax * By - Ay * Bx + 0.000001)
cos <- round((Ax * Bx + Ay * By) / ((Ax^2 + Ay^2)*(Bx^2 + By^2))^0.5,14)
return(acos(cos)*hugo)
}
angle <- c(NA,NA, angle_cal(df_day$x, df_day$y, dim(df_day)[1]))
if (length(na.omit(angle[df_day$pause==0])) > 0){
mle_wrpcauchy <- wrpcauchy.ml(na.omit(angle[df_day$pause==0]), 0, 0, acc=1e-015)
mu <- as.numeric(mle_wrpcauchy[1])
rho <- as.numeric(mle_wrpcauchy[2])
} else{
mu <- NA
rho <- NA
}
df_temp <- data.frame(
df_day[1,1:4], traveled_dis, mean_moving_speed, pause_duration.
D, a, mu, rho
ids = unique(df_all$id)
df_sum <- NULL
for(i in 1:length(ids)){
df <- subset(df_all, id==ids[i])
for(i_day in 0:3){
df_day <- subset(df, day==i_day)
traveled_dis <- sum(df_day$step_length)
mean_moving_speed <- mean(df_day$step_length[df_day$pause == 0], na.rm=T)
pause_duration <- sum(df_day$pause)
computeMSD <- function(sx,sy,until=4)
{
msd.t <- rep(0,until)
for (dt in 1:until)
{
displacement.x <- as.vector(na.omit(sx[(1+dt):length(sx)]) - sx[1:(length(sx)-dt)])
displacement.y <- as.vector(na.omit(sy[(1+dt):length(sy)]) - sy[1:(length(sy)-dt)])
sqrdispl <- (displacement.x^2 + displacement.y^2)
msd.t[dt] <- mean(sqrdispl)
}
return(msd.t)
}
msd <- computeMSD(df_day$x, df_day$y, 5000)
tau <- 1:5000/5
r <- lm(log10(msd)~log10(tau))
D <- 10^r$coef[1]
a <- r$coef[2]
ggplot(data.frame(msd,tau), aes(x=tau, y=msd))+
geom_point()+
coord_fixed()+
scale_x_log10()+
scale_y_log10()
#ggsave(paste0("msd_",ids[i],"_",i_day,".pdf"))
angle_cal <- function(X, Y, Length){
Ax <- (X[3:Length-1] - X[3:Length-2])
Bx <- (X[3:Length] - X[3:Length-1])
Ay <- (Y[3:Length-1] - Y[3:Length-2])
By <- (Y[3:Length] - Y[3:Length-1])
hugo <- (Ax * By - Ay * Bx + 0.000001)/abs(Ax * By - Ay * Bx + 0.000001)
cos <- round((Ax * Bx + Ay * By) / ((Ax^2 + Ay^2)*(Bx^2 + By^2))^0.5,14)
return(acos(cos)*hugo)
}
angle <- c(NA,NA, angle_cal(df_day$x, df_day$y, dim(df_day)[1]))
if (length(na.omit(angle[df_day$pause==0])) > 0){
mle_wrpcauchy <- wrpcauchy.ml(na.omit(angle[df_day$pause==0]), 0, 0, acc=1e-015)
mu <- as.numeric(mle_wrpcauchy[1])
rho <- as.numeric(mle_wrpcauchy[2])
} else{
mu <- NA
rho <- NA
}
df_temp <- data.frame(
df_day[1,1:4], traveled_dis, mean_moving_speed, pause_duration,
D, a, mu, rho
)
df_sum <- rbind(df_sum, df_temp)
}
}
ggplot(df_sum, aes(x=day, y=rho, col=sex))+
geom_point(position = position_dodge(width = 0.1))+
stat_summary(geom="errorbar", position = position_dodge(width = 0.1),
width=.1)+
scale_color_viridis(discrete = T, end=.5)
ggplot(df_sum, aes(x=day, y=pause_duration, col=sex))+
geom_point(position = position_dodge(width = 0.1))+
stat_summary(geom="errorbar", position = position_dodge(width = 0.1),
width=.1)+
scale_color_viridis(discrete = T, end=.5)
#------------------------------------------------------------------------------#
# Convert csv files to single rda file
#------------------------------------------------------------------------------#
data.convert <- function(msd_max = 5000){
f.namesplace <- list.files("data/raw/ANTAM_4day", pattern=".csv",full.names=T)
f.names <- list.files("data/raw/ANTAM_4day", pattern=".csv",full.names=F)
df_all <- NULL
for(i_files in 1:length(f.namesplace)){
print(paste(i_files, "/", length(f.names), " ", f.names[i_files]))
# prep data
d <- data.frame(fread(f.namesplace[i_files], header=F))[,c(6,4,5)]
colnames(d) = c("time", "x", "y")
colony <- str_split(f.names[i_files], "_")[[1]][3]
sex <- str_split(f.names[i_files], "_")[[1]][4]
ind <- str_split(f.names[i_files], "_")[[1]][5]
day <- as.numeric(str_sub(str_split(f.names[i_files], "_")[[1]][6], 1, 1))-1
id <- paste("Rs", colony, sex, ind, sep="_")
d[,2:3] <-d[,2:3] * 0.023725 # scale
d <- (d[d$time>60*5,])  # remove first 5 min data
d[,1] <- d[,1] - d[1,1]
d[,2] <- d[,2] - d[1,2]
d[,3] <- d[,3] - d[1,3]
time = seq(0, 1500, 0.2)
x = approx(d$time, d$x, xout=time)$y
y = approx(d$time, d$y, xout=time)$y
step_length = c(0, sqrt( diff(x)^2 + diff(y)^2))
# computeMSD is the function from the library "flowcatchR."
# I could not load it for some reasons, so pasted here as it is.
computeMSD <- function(sx,sy,until=4){
msd.t <- rep(0,until)
for (dt in 1:until){
displacement.x <- as.vector(na.omit(sx[(1+dt):length(sx)]) - sx[1:(length(sx)-dt)])
displacement.y <- as.vector(na.omit(sy[(1+dt):length(sy)]) - sy[1:(length(sy)-dt)])
sqrdispl <- (displacement.x^2 + displacement.y^2)
msd.t[dt] <- mean(sqrdispl)
}
return(msd.t)
}
d.temp <- data.frame(
colony, sex, day, id,
time, x, y, step_length,
pause = step_length < 0.70, # Mizumoto and Dobata 2019 Sci Adv
cum_travel_dis = cumsum(step_length)
)
df_all <- rbind(df_all, d.temp)
d.temp <- data.frame(
colony, sex, day, id,
time,
MSD = computeMSD(x, y, msd_max),
tau = 1:msd_max/5
)
}
save(df_all, file = "data/df_all.rda")
}
#------------------------------------------------------------------------------#
# Convert csv files to single rda file
#------------------------------------------------------------------------------#
data.convert <- function(msd_max = 5000){
f.namesplace <- list.files("data/raw/ANTAM_4day", pattern=".csv",full.names=T)
f.names <- list.files("data/raw/ANTAM_4day", pattern=".csv",full.names=F)
df_all = df_MSD <- NULL
for(i_files in 1:length(f.namesplace)){
print(paste(i_files, "/", length(f.names), " ", f.names[i_files]))
# prep data
d <- data.frame(fread(f.namesplace[i_files], header=F))[,c(6,4,5)]
colnames(d) = c("time", "x", "y")
colony <- str_split(f.names[i_files], "_")[[1]][3]
sex <- str_split(f.names[i_files], "_")[[1]][4]
ind <- str_split(f.names[i_files], "_")[[1]][5]
day <- as.numeric(str_sub(str_split(f.names[i_files], "_")[[1]][6], 1, 1))-1
id <- paste("Rs", colony, sex, ind, sep="_")
d[,2:3] <-d[,2:3] * 0.023725 # scale
d <- (d[d$time>60*5,])  # remove first 5 min data
d[,1] <- d[,1] - d[1,1]
d[,2] <- d[,2] - d[1,2]
d[,3] <- d[,3] - d[1,3]
time = seq(0, 1500, 0.2)
x = approx(d$time, d$x, xout=time)$y
y = approx(d$time, d$y, xout=time)$y
step_length = c(0, sqrt( diff(x)^2 + diff(y)^2))
# computeMSD is the function from the library "flowcatchR."
# I could not load it for some reasons, so pasted here as it is.
computeMSD <- function(sx,sy,until=4){
msd.t <- rep(0,until)
for (dt in 1:until){
displacement.x <- as.vector(na.omit(sx[(1+dt):length(sx)]) - sx[1:(length(sx)-dt)])
displacement.y <- as.vector(na.omit(sy[(1+dt):length(sy)]) - sy[1:(length(sy)-dt)])
sqrdispl <- (displacement.x^2 + displacement.y^2)
msd.t[dt] <- mean(sqrdispl)
}
return(msd.t)
}
d.temp <- data.frame(
colony, sex, day, id,
time, x, y, step_length,
pause = step_length < 0.70, # Mizumoto and Dobata 2019 Sci Adv
cum_travel_dis = cumsum(step_length)
)
df_all <- rbind(df_all, d.temp)
d.temp <- data.frame(
colony, sex, day, id,
time,
MSD = computeMSD(x, y, msd_max),
tau = 1:msd_max/5
)
df_MSD <- rbind(df_MSD, d.temp)
}
save(df_all, file = "data/df_all.rda")
}
data.convert()
msd_max
#------------------------------------------------------------------------------#
# Convert csv files to single rda file
#------------------------------------------------------------------------------#
data.convert <- function(msd_max = 5000){
f.namesplace <- list.files("data/raw/ANTAM_4day", pattern=".csv",full.names=T)
f.names <- list.files("data/raw/ANTAM_4day", pattern=".csv",full.names=F)
df_all = df_MSD <- NULL
for(i_files in 1:length(f.namesplace)){
print(paste(i_files, "/", length(f.names), " ", f.names[i_files]))
# prep data
d <- data.frame(fread(f.namesplace[i_files], header=F))[,c(6,4,5)]
colnames(d) = c("time", "x", "y")
colony <- str_split(f.names[i_files], "_")[[1]][3]
sex <- str_split(f.names[i_files], "_")[[1]][4]
ind <- str_split(f.names[i_files], "_")[[1]][5]
day <- as.numeric(str_sub(str_split(f.names[i_files], "_")[[1]][6], 1, 1))-1
id <- paste("Rs", colony, sex, ind, sep="_")
d[,2:3] <-d[,2:3] * 0.023725 # scale
d <- (d[d$time>60*5,])  # remove first 5 min data
d[,1] <- d[,1] - d[1,1]
d[,2] <- d[,2] - d[1,2]
d[,3] <- d[,3] - d[1,3]
time = seq(0, 1500, 0.2)
x = approx(d$time, d$x, xout=time)$y
y = approx(d$time, d$y, xout=time)$y
step_length = c(0, sqrt( diff(x)^2 + diff(y)^2))
# computeMSD is the function from the library "flowcatchR."
# I could not load it for some reasons, so pasted here as it is.
computeMSD <- function(sx,sy,until=4){
msd.t <- rep(0,until)
for (dt in 1:until){
displacement.x <- as.vector(na.omit(sx[(1+dt):length(sx)]) - sx[1:(length(sx)-dt)])
displacement.y <- as.vector(na.omit(sy[(1+dt):length(sy)]) - sy[1:(length(sy)-dt)])
sqrdispl <- (displacement.x^2 + displacement.y^2)
msd.t[dt] <- mean(sqrdispl)
}
return(msd.t)
}
d.temp <- data.frame(
colony, sex, day, id,
time, x, y, step_length,
pause = step_length < 0.70, # Mizumoto and Dobata 2019 Sci Adv
cum_travel_dis = cumsum(step_length)
)
df_all <- rbind(df_all, d.temp)
d.temp <- data.frame(
colony, sex, day, id,
time,
MSD = computeMSD(x, y, msd_max),
tau = (1:msd_max)/5
)
df_MSD <- rbind(df_MSD, d.temp)
}
save(df_all, file = "data/df_all.rda")
}
data.convert()
computeMSD(x, y, msd_max)
#------------------------------------------------------------------------------#
# Convert csv files to single rda file
#------------------------------------------------------------------------------#
data.convert <- function(msd_max = 5000){
f.namesplace <- list.files("data/raw/ANTAM_4day", pattern=".csv",full.names=T)
f.names <- list.files("data/raw/ANTAM_4day", pattern=".csv",full.names=F)
df_all = df_MSD <- NULL
for(i_files in 1:length(f.namesplace)){
print(paste(i_files, "/", length(f.names), " ", f.names[i_files]))
# prep data
d <- data.frame(fread(f.namesplace[i_files], header=F))[,c(6,4,5)]
colnames(d) = c("time", "x", "y")
colony <- str_split(f.names[i_files], "_")[[1]][3]
sex <- str_split(f.names[i_files], "_")[[1]][4]
ind <- str_split(f.names[i_files], "_")[[1]][5]
day <- as.numeric(str_sub(str_split(f.names[i_files], "_")[[1]][6], 1, 1))-1
id <- paste("Rs", colony, sex, ind, sep="_")
d[,2:3] <-d[,2:3] * 0.023725 # scale
d <- (d[d$time>60*5,])  # remove first 5 min data
d[,1] <- d[,1] - d[1,1]
d[,2] <- d[,2] - d[1,2]
d[,3] <- d[,3] - d[1,3]
time = seq(0, 1500, 0.2)
x = approx(d$time, d$x, xout=time)$y
y = approx(d$time, d$y, xout=time)$y
step_length = c(0, sqrt( diff(x)^2 + diff(y)^2))
# computeMSD is the function from the library "flowcatchR."
# I could not load it for some reasons, so pasted here as it is.
computeMSD <- function(sx,sy,until=4){
msd.t <- rep(0,until)
for (dt in 1:until){
displacement.x <- as.vector(na.omit(sx[(1+dt):length(sx)]) - sx[1:(length(sx)-dt)])
displacement.y <- as.vector(na.omit(sy[(1+dt):length(sy)]) - sy[1:(length(sy)-dt)])
sqrdispl <- (displacement.x^2 + displacement.y^2)
msd.t[dt] <- mean(sqrdispl)
}
return(msd.t)
}
d.temp <- data.frame(
colony, sex, day, id,
time, x, y, step_length,
pause = step_length < 0.70, # Mizumoto and Dobata 2019 Sci Adv
cum_travel_dis = cumsum(step_length)
)
df_all <- rbind(df_all, d.temp)
d.temp <- data.frame(
colony, sex, day, id,
MSD = computeMSD(x, y, msd_max),
tau = (1:msd_max)/5
)
df_MSD <- rbind(df_MSD, d.temp)
}
save(df_all, file = "data/df_all.rda")
}
data.convert()
df_MSD
save(df_all, df_MSD, file = "data/df_all.rda")
#------------------------------------------------------------------------------#
# Convert csv files to single rda file
#------------------------------------------------------------------------------#
data.convert <- function(msd_max = 5000){
f.namesplace <- list.files("data/raw/ANTAM_4day", pattern=".csv",full.names=T)
f.names <- list.files("data/raw/ANTAM_4day", pattern=".csv",full.names=F)
df_all = df_MSD <- NULL
for(i_files in 1:length(f.namesplace)){
print(paste(i_files, "/", length(f.names), " ", f.names[i_files]))
# prep data
d <- data.frame(fread(f.namesplace[i_files], header=F))[,c(6,4,5)]
colnames(d) = c("time", "x", "y")
colony <- str_split(f.names[i_files], "_")[[1]][3]
sex <- str_split(f.names[i_files], "_")[[1]][4]
ind <- str_split(f.names[i_files], "_")[[1]][5]
day <- as.numeric(str_sub(str_split(f.names[i_files], "_")[[1]][6], 1, 1))-1
id <- paste("Rs", colony, sex, ind, sep="_")
d[,2:3] <-d[,2:3] * 0.023725 # scale
d <- (d[d$time>60*5,])  # remove first 5 min data
d[,1] <- d[,1] - d[1,1]
d[,2] <- d[,2] - d[1,2]
d[,3] <- d[,3] - d[1,3]
time = seq(0, 1500, 0.2)
x = approx(d$time, d$x, xout=time)$y
y = approx(d$time, d$y, xout=time)$y
step_length = c(0, sqrt( diff(x)^2 + diff(y)^2))
# computeMSD is the function from the library "flowcatchR."
# I could not load it for some reasons, so pasted here as it is.
computeMSD <- function(sx,sy,until=4){
msd.t <- rep(0,until)
for (dt in 1:until){
displacement.x <- as.vector(na.omit(sx[(1+dt):length(sx)]) - sx[1:(length(sx)-dt)])
displacement.y <- as.vector(na.omit(sy[(1+dt):length(sy)]) - sy[1:(length(sy)-dt)])
sqrdispl <- (displacement.x^2 + displacement.y^2)
msd.t[dt] <- mean(sqrdispl)
}
return(msd.t)
}
d.temp <- data.frame(
colony, sex, day, id,
time, x, y, step_length,
pause = step_length < 0.70, # Mizumoto and Dobata 2019 Sci Adv
cum_travel_dis = cumsum(step_length)
)
df_all <- rbind(df_all, d.temp)
d.temp <- data.frame(
colony, sex, day, id,
MSD = computeMSD(x, y, msd_max),
tau = (1:msd_max)/5
)
df_MSD <- rbind(df_MSD, d.temp)
}
save(df_all, df_MSD, file = "data/df_all.rda")
}
data.convert()
df_MSD
load("data/df_all.rda")
df_MSD
ggplot(df_MSD, aes(x=tau, y=MSD, color=day, group=ID))+
geom_path() + facet_wrap(.~sex)
ggplot(df_MSD, aes(x=tau, y=MSD, color=day, group=id))+
geom_path() + facet_wrap(.~sex)
f
ggplot(df_MSD[1:10000,], aes(x=tau, y=MSD, color=day, group=id))+
geom_path() + facet_wrap(.~sex)
ggplot(df_MSD[1:10000,], aes(x=tau, y=MSD, color=day, group=id))
plot(0)
